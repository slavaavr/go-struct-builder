--- source code ---

			package main

			//go:generate gosb -source=input.go
			type a struct {
				f1 int
				f2 string
			}


--- generated code ---

// Code generated by go-struct-builder. DO NOT EDIT.
// Source: input.go

package main

import (
	"errors"
)

type aBuilder struct {
	x    *a
	mask []byte
}

func newABuilder() *aBuilder {
	/**
	Required fields:
	1) f1 int
	2) f2 string
	*/

	return &aBuilder{
		x:    new(a),
		mask: []byte{0x6},
	}
}

func (b *aBuilder) SetF1(v int) *aBuilder {
	b.x.f1 = v
	b.mask[1/8] &= ^uint8(1 << 1 % 8)
	return b
}

func (b *aBuilder) SetF2(v string) *aBuilder {
	b.x.f2 = v
	b.mask[2/8] &= ^uint8(1 << 2 % 8)
	return b
}

func (b *aBuilder) Build() (*a, error) {
	if (b.mask[1/8] & (1 << 1 % 8)) != 0 {
		return nil, errors.New("a.f1 field is not provided")
	}

	if (b.mask[2/8] & (1 << 2 % 8)) != 0 {
		return nil, errors.New("a.f2 field is not provided")
	}

	return b.x, nil
}
